name: "Terraform-Apply"

on:
  push:
    branches:
      - main

jobs:
  terraform:
    name: "Terraform"
    runs-on: ubuntu-latest
    env:	
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
      AWS_REGION: 'us-west-2'
      AWS_BUCKET: ${{ secrets.AWS_BUCKET }}

    steps:
      - uses: actions/checkout@v2
      - name: Archive local code to zip, get EC2 ids
        run: |
          zip -r script.zip requirements.txt main.py
          echo "id1=`aws ec2 describe-instances --filters Name=availability-zone,Values=us-west-2a \
            Name=instance-state-name,Values=running --query "Reservations[*].Instances[*].[InstanceId]" \
            --output text`" >> $GITHUB_ENV
          echo "id2=`aws ec2 describe-instances --filters Name=availability-zone,Values=us-west-2b \
            Name=instance-state-name,Values=running --query "Reservations[*].Instances[*].[InstanceId]" \
            --output text`" >> $GITHUB_ENV
      - name: Setup Python 3.10
        uses: actions/setup-python@v4
        with: 
          python-version: "3.10"
      - name: Install dependencies 
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Create s3 buckets and download code from s3 bucket
        run: |
          python create_s3_buckets.py 
          aws s3 cp s3://scaling-fastapi-bucket-1/script.zip script1.zip
        continue-on-error: true
      - name: Compare archives and terminate instances
        run: |
          if [[ `diff \
            <(unzip -vqq script.zip | awk '{$2=""; $3=""; $4=""; $5=""; $6=""; print}' | sort -k3) \
            <(unzip -vqq script1.zip | awk '{$2=""; $3=""; $4=""; $5=""; $6=""; print}' | sort -k3)` != "" ]]
          then
            if [[ ${{ env.id1 }} != "" && ${{ env.id2 }} != "" ]]
            then
              echo "Terminating instances..."
              aws ec2 terminate-instances --instance-ids ${{ env.id1 }} ${{ env.id2 }}
            fi
          fi
        continue-on-error: true
      - name: Upload code to s3
        run: |
          if [[ `diff \
            <(unzip -vqq script.zip | awk '{$2=""; $3=""; $4=""; $5=""; $6=""; print}' | sort -k3) \
            <(unzip -vqq script1.zip | awk '{$2=""; $3=""; $4=""; $5=""; $6=""; print}' | sort -k3)` != "" ]]
          then
            aws s3 cp script.zip s3://scaling-fastapi-bucket-1/script.zip
          fi
      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.1.7
      - name: Deploy Terraform
        run: |
          cd terraform
          terraform init
          terraform apply -auto-approve
